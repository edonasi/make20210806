#pragma once

namespace n_fps {

	//FPSを管理する
	class ClFps {

		//*----------------------------------------------------------------------------*
		//							publicここから
		//*----------------------------------------------------------------------------*

	public:

		//		シングルトン実装
		static ClFps* GetIns();		//インスタンス取得

		//		プロパティここから
		//*------------------------------------------------*
		//		Fps値の管理
		//*------------------------------------------------*
		int GetFpsIntValue();		//FPS値(int)を取得
		int GetFpsIntFix(			//speedをfpsに合わせて調整
			int speed, float* over);
		float GetFpsFloatValue();	//FPS値(float)を取得
		float GetDeltaTime();		//deltaTimeを参照

		//		プロトタイプ宣言ここから 
		VOID Destroy();			//インスタンスの破棄
		//*------------------------------------------------*
		//		Fps値の管理
		//*------------------------------------------------*
		VOID FpsUpdate();		//Fps値を測定し、値を更新する
		int FpsWait();			//FPSで処理を待つ
		//*------------------------------------------------*
		//		Fps値の描画
		//*------------------------------------------------*
		VOID FpsDraw();			//デバック用の平均FPS値を黒色で画面左下に描画する
		VOID FpsDraw(			//位置を設定してデバック用の黒色で平均FPS値を描画する
			int draw_x,
			int draw_y
		);

		//*----------------------------------------------------------------------------*
		//							privateここから
		//*----------------------------------------------------------------------------*

	private:

		//		シングルトン実装
		static ClFps* m_ins;		//シングルトンなインスタンス
		ClFps();						//コンストラクタ
		ClFps(const ClFps& src);		//コピーコンストラクタ
		ClFps& operator=(const ClFps& src);
		virtual ~ClFps();				//デストラクタ

		//		メンバ変数ここから
		//*------------------------------------------------*
		//		Fps値の管理
		//*------------------------------------------------*
		BOOL m_is_init;				//最初の測定開始フラグ
		LONGLONG m_start_time;		//開始開始時刻
		LONGLONG m_now_time;		//現在の時刻
		LONGLONG m_old_time;		//以前の時刻
		int m_int_value;			//FPS(int)の値
		float m_float_value;		//FPS(float)の値
		float m_delta_time;			//経過時間
		int m_cnt;					//現在のフレーム数
		int m_sample_rote;			//平均を取るサンプル値
		//*------------------------------------------------*
		//		Fps値の描画
		//*------------------------------------------------*
		//		メンバプロトタイプ宣言ここから
		VOID MmMemberVarInit();	//メンバ変数の初期化
		//*------------------------------------------------*
		//		Fps値の描画
		//*------------------------------------------------*
		int MmFpsDrawPosLimit(int num, int m_max);	//Fps描画の位置調整
	};
}